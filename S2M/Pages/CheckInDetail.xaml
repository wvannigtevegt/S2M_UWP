<Page
    x:Class="S2M.Pages.CheckInDetail"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:S2M.Pages"
	xmlns:control="using:S2M.Controls"
	xmlns:converters="using:S2M.Converters"
	xmlns:data="using:S2M.Models"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	Loaded="Page_Loaded"
    mc:Ignorable="d">

	<Page.Resources>
		<converters:AmountToVisibilityConverter x:Key="AmountToVisibilityConverter" />
		<converters:BooleanToVisibilityConverter x:Key="VisibilityConverter" />
		<converters:CheckInToIsPresentConverter x:Key="IsPresentConverter" />
		<converters:RelativeTimeConverter x:Key="RelativeTimeConverter" />
		<converters:StringLengthToVisibilityConverter x:Key="StringLengthToVisibilityConverter" />
		<converters:TimestampToDateStringConverter x:Key="TimestampToDateStringConverter" />

		<ItemsPanelTemplate x:Key="ItemsPanelTemplate">
			<ItemsStackPanel />
		</ItemsPanelTemplate>

		<DataTemplate x:Key="SelectingChatTemplate">
			<local:ChatTemplateSelector Content="{Binding}"
				ImageLeft="{StaticResource ChatItemImageLeftTemplate}"
				ImageRight="{StaticResource ChatItemImageRightTemplate}"
				HorizontalContentAlignment="Stretch" />
		</DataTemplate>

		<DataTemplate x:Key="ChatItemImageLeftTemplate" x:DataType="data:ChatMessage">
			<Grid Background="White" Margin="4,0,48,4">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>

				<Ellipse Margin="4,4,4,4"
						 Width="24" 
						 Height="24"
						 HorizontalAlignment="Left"
						 VerticalAlignment="Top"
						 Grid.Row="0"
						 Grid.RowSpan="2"
						 Grid.Column="0">
					<Ellipse.Fill>
						<ImageBrush Stretch="Fill">
							<ImageBrush.ImageSource>
								<BitmapImage DecodePixelHeight="24" 
										DecodePixelWidth="24" 
										UriSource="{x:Bind ProfileImage_84}" />
							</ImageBrush.ImageSource>
						</ImageBrush>
					</Ellipse.Fill>
				</Ellipse>

				<StackPanel Grid.Column="1"
						   Grid.Row="0">
					<TextBlock Text="{x:Bind ProfileName}"
							   FontFamily="Segoe UI, Segoe UI Emoji"
							   Margin="12,4,0,0"
							   Foreground="Gray"
							   FontSize="11"/>

					<TextBlock Text="{x:Bind Message}"
							   TextWrapping="WrapWholeWords"
							   Margin="12,4,12,0"
							   Foreground="#FF001E2D"/>
				</StackPanel>

				<TextBlock Text="{x:Bind CreatedOnDate, Converter={StaticResource RelativeTimeConverter}}"
							   TextWrapping="WrapWholeWords"
							   Margin="12,0,12,12"
							   Foreground="Gray"
							   FontSize="11"
							   Grid.Column="1"
							   Grid.Row="1"/>
			</Grid>
		</DataTemplate>

		<DataTemplate x:Key="ChatItemImageRightTemplate" x:DataType="data:ChatMessage">
			<Grid Background="White" Margin="48,0,0,4">
				<Grid.RowDefinitions>
					<RowDefinition Height="Auto" />
					<RowDefinition Height="*" />
				</Grid.RowDefinitions>

				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>

				<Ellipse Margin="4,4,4,4"
						 Width="24" 
						 Height="24"
						 HorizontalAlignment="Left"
						 VerticalAlignment="Top"
						 Grid.Row="0"
						 Grid.RowSpan="2"
						 Grid.Column="1">
					<Ellipse.Fill>
						<ImageBrush Stretch="Fill">
							<ImageBrush.ImageSource>
								<BitmapImage DecodePixelHeight="24" 
										DecodePixelWidth="24" 
										UriSource="{x:Bind ProfileImage_84}" />
							</ImageBrush.ImageSource>
						</ImageBrush>
					</Ellipse.Fill>
				</Ellipse>

				<TextBlock Text="{x:Bind Message}"
						   FontFamily="Segoe UI, Segoe UI Emoji"
						   TextWrapping="WrapWholeWords"
						   Margin="12,4,12,0"
						   Foreground="#FF001E2D"
						   Grid.Column="0"
						   Grid.Row="0"/>

				<TextBlock Text="{x:Bind CreatedOnDate, Converter={StaticResource RelativeTimeConverter}}"
						   TextWrapping="WrapWholeWords"
						   Margin="12,0,12,12"
						   Foreground="Gray"
						   FontSize="11"
						   Grid.Column="0"
						   Grid.Row="1"/>

			</Grid>
		</DataTemplate>
	</Page.Resources>


	<Grid>
		<SplitView x:Name="CheckInDetailSplitView"
					   PanePlacement="Right">
			<SplitView.Content>
				<Grid>
					<Grid.RowDefinitions>
						<RowDefinition Height="Auto" />
						<RowDefinition Height="Auto" />
						<RowDefinition Height="*" />
					</Grid.RowDefinitions>

					<StackPanel x:Name="CheckInNameStackPanel" 
								Grid.Row="0"
								Padding="0,0,0,24"
								Background="DarkGray"
								Orientation="Vertical">
						<Ellipse Margin="0,48,0,12" 
								 Width="125" 
								 Height="125" 
								 HorizontalAlignment="Center">
							<Ellipse.Fill>
								<ImageBrush Stretch="Fill">
									<ImageBrush.ImageSource>
										<BitmapImage x:Name="CheckInImageBrush" 
													 DecodePixelHeight="125"
													 DecodePixelWidth="125"
													 UriSource="{Binding SelectedCheckin.ProfileImage_150}" />
									</ImageBrush.ImageSource>
								</ImageBrush>
							</Ellipse.Fill>
						</Ellipse>

						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<FontIcon x:Name="IsConfirmedFontIcon" 
									  FontFamily="Segoe MDL2 Assets"
									  FontSize="14"
									  Margin="0,0,4,4"
									  Foreground="{Binding SelectedCheckin, Converter={StaticResource IsPresentConverter}}"
									  VerticalAlignment="Bottom"
									  Glyph="&#xECCC;" />

							<TextBlock x:Name="CheckInNameTextBlock"
									   Margin="4,0,0,0" 
									   Text="{Binding SelectedCheckin.ProfileName}"
									   Style="{ThemeResource SubtitleTextBlockStyle}"
									   Foreground="White"
									   HorizontalAlignment="Center"/>
						</StackPanel>
						
						<TextBlock Margin="0,0,0,12" HorizontalAlignment="Center" Foreground="White" FontSize="12">
							<Run Text="{Binding SelectedCheckin.LocationName}" />
							<Run Text="{Binding SelectedCheckin.StartTimeStamp, Converter={StaticResource TimestampToDateStringConverter}, ConverterParameter='HH:mm'}" />
							<Run Text="-" />
							<Run Text="{Binding SelectedCheckin.EndTimeStamp, Converter={StaticResource TimestampToDateStringConverter}, ConverterParameter='HH:mm'}" />
						</TextBlock>

						<StackPanel x:Name="CheckInContactStackPanel" Margin="0,12,0,0" Orientation="Horizontal" HorizontalAlignment="Center">
							<HyperlinkButton x:Name="OpenChatHyperLinkButton"
											 Margin="0,0,12,0" 
											 Click="StartChatButton_Click">
								<StackPanel x:Name="StartChatStackPanel" 
													Orientation="Horizontal"
													HorizontalAlignment="Center">
									<FontIcon x:Name="ChatFontIcon" 
													  FontFamily="Segoe MDL2 Assets"
													  FontSize="14"
													  Foreground="White"
													  VerticalAlignment="Bottom"
													  Glyph="&#xE15F;" />

									<TextBlock Text="Chat"
													   Margin="8,0,0,0"
													   FontSize="14"
													   Foreground="White"
													   VerticalAlignment="Bottom"/>
								</StackPanel>
							</HyperlinkButton>

							<!--<HyperlinkButton Margin="12,0,0,0" Click="MeetRequestButton_Click">
									<StackPanel x:Name="MeetRequestStackPanel" 
													Orientation="Horizontal"
													HorizontalAlignment="Center">
										<FontIcon x:Name="MeetRequestFontIcon" 
													  FontFamily="Segoe MDL2 Assets"
													  FontSize="14"
													  Foreground="White"
													  VerticalAlignment="Bottom"
													  Glyph="&#xE125;" />

										<TextBlock Text="Meet request"
													   Margin="8,0,0,0"
													   FontSize="14"
													   Foreground="White"
													   VerticalAlignment="Bottom"/>
									</StackPanel>
								</HyperlinkButton>-->
						</StackPanel>
					</StackPanel>

					<StackPanel Background="Gray" Grid.Row="1" Visibility="{Binding SelectedCheckin.WorkingOn, Converter={StaticResource StringLengthToVisibilityConverter}}">
						<TextBlock x:Name="WorkingOnQuoteTextBlock"
								   FontFamily="Times New Roman" 
								   HorizontalAlignment="Center"
								   Foreground="White"
								   FontSize="20" 
								   FontStyle="Italic" 
								   TextWrapping="WrapWholeWords">
							<Run Text="&#8220;" />
							<Run Text="{Binding SelectedCheckin.WorkingOn}" />
							<Run Text="&#8221;" />
						</TextBlock>
					</StackPanel>

					<ItemsControl x:Name="TagsWrapPanel"
								  Grid.Row="2"
								  Visibility="{Binding TagCount, Converter={StaticResource AmountToVisibilityConverter}}"
								  ItemsSource="{Binding Tags}">
						<ItemsControl.ItemsPanel>
							<ItemsPanelTemplate>
								<control:WrapPanel/>
							</ItemsPanelTemplate>
						</ItemsControl.ItemsPanel>
						<ItemsControl.ItemTemplate>
							<DataTemplate>
								<StackPanel Orientation="Horizontal"
											VerticalAlignment="Center"
											Background="#FF00BAFF" 
											MinWidth="0" 
											MinHeight="0" 
											Margin="0,4,4,0">
									<TextBlock Margin="4,4,4,4"
											   VerticalAlignment="Center"
											   Text="{Binding}" 
											   FontSize="14" />
								</StackPanel>
							</DataTemplate>
						</ItemsControl.ItemTemplate>
					</ItemsControl>
				</Grid>
			</SplitView.Content>
			<SplitView.Pane>
				<ScrollViewer>
					<Grid Background="#FF2B2B2B">
						<Grid.RowDefinitions>
							<RowDefinition Height="*" />
							<RowDefinition Height="48" />
						</Grid.RowDefinitions>

						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>

						<ListView Grid.Row="0"
								  x:Name="ChatMessagesListView" 
								  ItemsSource="{x:Bind ChatMessageList}"
								  ItemsPanel="{StaticResource ResourceKey=ItemsPanelTemplate}"
								  ItemTemplate="{StaticResource SelectingChatTemplate}"
								  IsHitTestVisible="False"
								  IsItemClickEnabled="False">
							<ListView.ItemContainerStyle>
								<Style TargetType="ListViewItem">
									<Setter Property="HorizontalContentAlignment" Value="Stretch" />
								</Style>
							</ListView.ItemContainerStyle>
						</ListView>

						<Grid Grid.Row="1">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<TextBox x:Name="ChatMessageTextBox"
									 Grid.Column="0"
									 HorizontalContentAlignment="Stretch"
									 KeyUp="ChatMessageTextBox_KeyDown"/>

							<Button x:Name="PostMessageButton" 
									Grid.Column="1"
									FontFamily="Segoe MDL2 Assets" 
									Content="&#xE122;" 
									FontSize="20"
									Width="48"
									Height="48"
									RelativePanel.AlignRightWithPanel="True"
									Click="PostMessageButton_Click" />
						</Grid>
					</Grid>
				</ScrollViewer>
			</SplitView.Pane>
		</SplitView>

		<VisualStateManager.VisualStateGroups>
			<VisualStateGroup x:Name="VisualStateGroup">
				<VisualState x:Name="VisualStatePhone">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="0"/>
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="CheckInDetailSplitView.DisplayMode " Value="Overlay" />
						<Setter Target="CheckInDetailSplitView.IsPaneOpen " Value="False" />
						<Setter Target="CheckInDetailSplitView.OpenPaneLength " Value="320" />

						<Setter Target="OpenChatHyperLinkButton.Visibility" Value="Visible" />
					</VisualState.Setters>
				</VisualState>
				<VisualState x:Name="VisualStateDesktop">
					<VisualState.StateTriggers>
						<AdaptiveTrigger MinWindowWidth="720" />
					</VisualState.StateTriggers>
					<VisualState.Setters>
						<Setter Target="CheckInDetailSplitView.DisplayMode " Value="Inline" />
						<Setter Target="CheckInDetailSplitView.IsPaneOpen " Value="True" />
						<Setter Target="CheckInDetailSplitView.OpenPaneLength " Value="480" />

						<Setter Target="OpenChatHyperLinkButton.Visibility" Value="Collapsed" />
					</VisualState.Setters>
				</VisualState>
			</VisualStateGroup>
		</VisualStateManager.VisualStateGroups>
	</Grid>
</Page>
